#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\bibpunct[, ]{[}{]}{;}{a}{}{,}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\html_latex_start <span class='latex'>
\html_latex_end </span>
\end_header

\begin_body

\begin_layout Title
APMA E4990 Final Project Report
\end_layout

\begin_layout Author
Varun Ravishankar, vr2263 and Viktor Roytman, vr2262
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Itemize
Intro paragraph
\end_layout

\begin_layout Itemize
motivation
\end_layout

\begin_layout Itemize
explanation of problem
\end_layout

\begin_layout Section
Datasets
\end_layout

\begin_layout Standard
To explore music trends over time, we used the Million Song Dataset 
\begin_inset CommandInset citation
LatexCommand citep
key "Bertin-Mahieux2011"

\end_inset

.
 This dataset contains a collection of audio features and metadata for one
 million songs from 1920 until today, and is free for non-commercial use.
 This data was collected using the Echo Nest API and a copy of the musicbrainz
 server in December 2010.
 This dataset includes information on releases, musical qualities like tempo
 and loudness, and tags.
 This dataset is split into HDF5 files, a common format for data and scientific
 applications.
 The complete dataset is 300 GB, but we were able to focus on a smaller
 300 MB dataset, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

msd_summary_file.h5
\end_layout

\end_inset

, that contained just the metadata without any audio analysis, similar artists,
 or tags.
 We also used a SQLite database (
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

track_metadata.db
\end_layout

\end_inset

) containing most of the metadata on each track, including track ID, artist,
 and year.
 Finally, we used a list of 515,576 tracks in the dataset that also had
 year information, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

track_per_year.txt
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
To explore song lyrics, we used another dataset available from the Million
 Song Dataset, the musiXmatch Dataset
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://labrosa.ee.columbia.edu/millionsong/musixmatch
\end_layout

\end_inset


\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand citep
key "Bertin-Mahieux2011"

\end_inset

.
 This dataset provides word counts per song for the most common 5,000 words
 in the data, but only contains the lyrics for 237,662 tracks because of
 copyright restrictions and the removal of instrumentals (defined as having
 three words or less) and duplicate tracks.
 The word counts are stored in bag of words style, meaning position information
 is lost.
 Since there are so many words in the entire dataset, the authors chose
 to limit the set to just the 5,000 most common words, and also decided
 to run a modified Porter-Stemmer program on the lyrics to create the counts.
 The dataset comes as two files, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

mxm_dataset_train.txt
\end_layout

\end_inset

 and 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

mxm_dataset_test.txt
\end_layout

\end_inset

, for standardizing machine learning tasks.
 Since we were not making predictions in our analysis, we cleaned up the
 training and test datasets and then concatenated the two files together.
\end_layout

\begin_layout Standard
The data can be downloaded using the accompanying script 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

download_msd.sh
\end_layout

\end_inset

.
\end_layout

\begin_layout Section
Technology and Development Environment
\end_layout

\begin_layout Standard
Our technology stack was simple.
 Our programs consisted of scripts meant to be run on POSIX machines.
 We tested and ran our scripts on Fedora 18 and OS X 10.8.3, using Python
 3
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.python.org/
\end_layout

\end_inset


\end_layout

\end_inset

 and Bash
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.gnu.org/software/bash/
\end_layout

\end_inset


\end_layout

\end_inset

.
 For analyzing the lyrics dataset, we wrote scripts in Python to read in
 the dataset, find the word frequencies, plot the distributions, and output
 statistics on the dataset.
 We also used NumPy
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.numpy.org/
\end_layout

\end_inset


\end_layout

\end_inset

 to vectorize the computations and the Python natural language processing
 module NLTK
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://nltk.org/
\end_layout

\end_inset


\end_layout

\end_inset

 to find stopwords.
 To analyze the Million Song Dataset, we used a combination of Python, NumPy,
 and pandas
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pandas.pydata.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 We also used queries on a SQLite
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.sqlite.org/
\end_layout

\end_inset


\end_layout

\end_inset

 database of just the track metadata to avoid analyzing the full 300 GB
 dataset.
 Our graphs were created using matplotlib
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://matplotlib.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 The database was optimized for counting and joining, and so we took advantage
 of the speedups possible when querying a relational database.
\end_layout

\begin_layout Section
Lyrics
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/lyrics_histogram_10_bins.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Distribution of Lyrics, 10 Bins 
\begin_inset CommandInset label
LatexCommand label
name "fig:Distribution-of-Lyrics,"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/lyrics_histogram_all_bins.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Distribution of Lyrics, 1 Bin per Word 
\begin_inset CommandInset label
LatexCommand label
name "fig:Distribution-of-Lyrics-1-Bin"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Duration
\end_layout

\begin_layout Standard
The 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

track_metadata.db
\end_layout

\end_inset

 file includes a duration for all of the million songs and a year for about
 half of them.
 We collected the data by nesting a query for the count and average duration
 of songs by year in a query for the year and average duration where the
 count is at least 10.
 We then created a line graph of average duration as a function of year,
 seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Average-Song-Duration"

\end_inset

.
 There is a very clear jump in average duration around 1970.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_duration_v_time.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Average Song Duration Over Time
\begin_inset CommandInset label
LatexCommand label
name "fig:Average-Song-Duration"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The creation of the duration histogram is even more straightforward: it
 is just the binning of a query for duration.
 This histogram can be seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Song-Duration-Distribution"

\end_inset

.
 There are very few songs with exceptionally long duration, and we had no
 success confirming that the songs with the longest duration in the dataset
 were actually that long (30 - 60 minutes).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_duration_histogram.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Song Duration Distribution
\begin_inset CommandInset label
LatexCommand label
name "fig:Song-Duration-Distribution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Loudness
\end_layout

\begin_layout Standard
The loudness information is in a summary HDF5 file, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

msd_summary_file.h5
\end_layout

\end_inset

.
 We pick out only the relevant columns, which are 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

track_id
\end_layout

\end_inset

 and 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

loudness
\end_layout

\end_inset

.
 We then step through another file, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

tracks_per_year.txt
\end_layout

\end_inset

, assembling lists of loudnesses per year.
 Finally, we filter out years with fewer than 10 songs, and take the average
 of the loudnesses.
 The resulting graph clearly shows an upward trend in loudness over time,
 and can be seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Average-Loudness-per"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_loudness_v_time.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Average Loudness per Year 
\begin_inset CommandInset label
LatexCommand label
name "fig:Average-Loudness-per"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The loudness histogram, seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Song-Loudness-Distribution"

\end_inset

, is a simple binning of the loudness information from the summary file.
 It is skewed heavily toward a loudness of 0, since most of the songs in
 the dataset are recent, and the more recent songs tend to be louder.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_loudness_histogram.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Song Loudness Distribution 
\begin_inset CommandInset label
LatexCommand label
name "fig:Song-Loudness-Distribution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Tempo
\end_layout

\begin_layout Standard
The acquisition method of the tempo information is very similar to that
 of the loudness information, since it is also in the summary HDF5 file.
 The resulting graph, seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Average-Tempo-per"

\end_inset

, shows wide swings in average tempo for the early years in the dataset,
 with a severe leveling off in recent years.
 It is not clear why there are such swings for the early years.
 It could be an artifact of the dataset or a sign of fashions in music changing
 quickly.
 In any case, generally tempo has increased with time.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_tempo_v_time.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Average Tempo per Year 
\begin_inset CommandInset label
LatexCommand label
name "fig:Average-Tempo-per"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The histogram, seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Song-Tempo-Distribution"

\end_inset

, shows something like a normal distribution for tempo, with a longer tail
 of high tempo songs.
 However, like duration, we had no success confirming that the songs with
 the highest or lowest temples were catalogued correctly.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename data/graphs/graph_tempo_histogram.png
	lyxscale 60
	scale 60

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Song Tempo Distribution 
\begin_inset CommandInset label
LatexCommand label
name "fig:Song-Tempo-Distribution"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Future Work
\end_layout

\begin_layout Standard
In the future, we would like to focus on genre analysis.
 We originally planned to use Amazon EC2, Amazon EMR, and Hadoop to explore
 the Million Song Dataset.
 We planned to find genres and then calculate duration, tempo, volume, and
 other features per genre.
 This did not work out because when we explored some of the HDF5 files in
 the dataset, the genres were set to empty strings.
 This was true even when we explored the full dataset.
 To further complicate matters, the dataset did not list genre as a valid
 field.
 Instead, it seems that we would have had to explore the musicbrainz tags,
 which are stored as arrays of strings per song.
 Because these tags are only a weak indicator of genre and because we tried
 to avoid looking at the full dataset as much as possible, we decided it
 would be best to explore an alternative dataset.
 We began to look at the Last.fm dataset
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://labrosa.ee.columbia.edu/millionsong/lastfm
\end_layout

\end_inset


\end_layout

\end_inset

, but ran out of time before we could explore this fully.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Section
References
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "Final_Project_Report"
options "ACM-Reference-Format-Journals"

\end_inset


\end_layout

\end_body
\end_document
