#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf4
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\html_latex_start <span class='latex'>
\html_latex_end </span>
\end_header

\begin_body

\begin_layout Title
APMA E4990 Final Project Report
\end_layout

\begin_layout Author
Varun Ravishankar, vr2263 and Viktor Roytman, vr2262
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Itemize
Intro paragraph
\end_layout

\begin_layout Itemize
motivation
\end_layout

\begin_layout Itemize
explanation of problem
\end_layout

\begin_layout Section
Datasets
\end_layout

\begin_layout Itemize
List the MSD datasets we used
\end_layout

\begin_layout Itemize
List the specific ones we looked at, and how we transformed/preprocessed
 them
\end_layout

\begin_layout Section
Technology and Development Environment
\end_layout

\begin_layout Standard
Our technology stack was simple.
 Our programs consisted of scripts meant to be run on POSIX machines.
 We tested and ran our scripts on Fedora 18 and OS X 10.8.3, using Python
 3 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.python.org/
\end_layout

\end_inset


\end_layout

\end_inset

 and Bash 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.gnu.org/software/bash/
\end_layout

\end_inset


\end_layout

\end_inset

.
 For analyzing the lyrics dataset, we wrote scripts in Python to read in
 the dataset, find the word frequencies, plot the distributions, and output
 statistics on the dataset.
 We also used NumPy 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.numpy.org/
\end_layout

\end_inset


\end_layout

\end_inset

 to vectorize the computations and the Python natural language processing
 module NLTK 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://nltk.org/
\end_layout

\end_inset


\end_layout

\end_inset

 to find stopwords.
 To analyze the Million Song Dataset, we used a combination of Python, NumPy,
 and pandas 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pandas.pydata.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 We also used queries on a SQLite 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.sqlite.org/
\end_layout

\end_inset


\end_layout

\end_inset

 database of just the track metadata to avoid analyzing the full 300 GB
 dataset.
 Our graphs were created using Matplotlib 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://matplotlib.org/
\end_layout

\end_inset


\end_layout

\end_inset

.
 The database was optimized for counting and joining, and so we took advantage
 of the speedups possible when querying a relational database.
\end_layout

\begin_layout Section
Lyrics
\end_layout

\begin_layout Section
Duration
\end_layout

\begin_layout Section
Volume
\end_layout

\begin_layout Section
Tempo
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Section
References
\end_layout

\end_body
\end_document
